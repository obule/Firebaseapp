{"version":3,"sources":["components/layout/SignedInlinks.js","store/actions/authActions.js","components/layout/SignedOutlink.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/Signin.js","components/auth/Signup.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducer/authReducer.js","store/reducer/projectReducer.js","store/reducer/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","SignedInlinks","SignedOutlink","Link","Notifications","_ref","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","dispath","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","name","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9ec0f08d.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    \r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a onClick={ props.signOut }>Log Out</a></li>\r\n            <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{ props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) =>{\r\n    return (dispatch, getState, {getFirebase}) =>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({type: 'LOGIN_ERROR', err});\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState,{getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type: 'SIGNOUT_SUCCESS'})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email ,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('user').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n            \r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({type: 'SIGNUP_ERROR', err })\r\n        })\r\n\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Signup</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n            \r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInlinks';\r\nimport SignedOutLinks from './SignedOutlink';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    \r\n    const links = auth.uid ? <SignedInLinks  profile = {profile}/> : <SignedOutLinks />\r\n    \r\n    return(\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">MarioPlan</Link>\r\n                { links }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile : state.firebase.profile\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = ({ notifications }) => {\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\"> Notifications </span>\r\n                        <ul className=\"notifications\">\r\n                            {notifications && notifications.map(item => {\r\n                                return(\r\n                                    <li key={item.id}>\r\n                                        <span className=\"pink-text\">{item.user } </span>\r\n\r\n                                        <span>{item.content } </span>\r\n                                        <div className=\"grey-text note-date\">\r\n                                            {moment(item.time.toDate()).fromNow()}\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst ProjectList = ({ projects }) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/'+ project.id} key={project.id}>\r\n                        <ProjectSummary project={project} key={project.id} />\r\n                    </Link>\r\n\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProjectList;","import  React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect} from 'react-router-dom';\r\n\r\n\r\nclass Dashboard extends Component{\r\n    \r\n    render(){\r\n        \r\n        const { projects, auth, notifications } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList  projects = { projects }/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications= { notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state); \r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt','desc'] },\r\n        { collection: 'notifications', limit: 10, orderBy: ['time','desc']}\r\n    ])\r\n)(Dashboard);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    if (project) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">\r\n                            {project.title}\r\n                        </span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}  </div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project......</p>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    //console.log(state);\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n        \r\n    }\r\n\r\n     \r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"gery-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" onChange={this.handleChange} id=\"email\"/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" onChange={this.handleChange} id=\"password\"/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">\r\n                            Login\r\n                        </button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p>: null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n        //console.log(this.state);\r\n    }\r\n\r\n     \r\n    render() {\r\n        const {  auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"gery-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" onChange={this.handleChange} id=\"firstName\"/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" onChange={this.handleChange} id=\"lastName\"/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" onChange={this.handleChange} id=\"email\"/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" onChange={this.handleChange} id=\"password\"/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-3\">\r\n                            Sign Up\r\n                        </button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p>: null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {createProject} from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n\r\n     \r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"gery-text text-darken-3\">Create new Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" onChange={this.handleChange} id=\"title\"/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea  id=\"content\" onChange={this.handleChange} className=\"materialize-textarea\"></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">\r\n                            Create\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = (project) =>{\r\n    return (dispath, getState, { getFirebase, getFirestore }) => {\r\n        // make async call to db\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() =>{\r\n            dispath({type: 'CREATE_PROJECT', project});\r\n        }).catch((err) => {\r\n            dispath({type: 'CREATE_PROJECT_ERROR', err});\r\n        })\r\n\r\n        \r\n    }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/Signin';\nimport SignUp from './components/auth/Signup';\nimport CreateProject from './components/projects/CreateProject';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n          <Navbar name=\"Ogechi\" />\n          <Switch>\n            <Route exact path='/' component= { Dashboard } />\n            <Route path='/project/:id' component= {ProjectDetails} />\n            <Route path='/signin' component= {SignIn} />\n            <Route path='/signup' component= {SignUp} />\n            <Route path='/create' component= {CreateProject } />\n          </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup successful')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    projects: [\r\n        { id: '1', title: 'help me find peach', content: 'blah blah blah' },\r\n        { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\r\n        { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' }\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project);\r\n            \r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err);\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyCz4WNQH-GI3i1coxZAbLQ0A2EfrwQZqYg\",\r\n    authDomain: \"net-ninja-marioplan-d7a85.firebaseapp.com\",\r\n    databaseURL: \"https://net-ninja-marioplan-d7a85.firebaseio.com\",\r\n    projectId: \"net-ninja-marioplan-d7a85\",\r\n    storageBucket: \"net-ninja-marioplan-d7a85.appspot.com\",\r\n    messagingSenderId: \"76276232336\"\r\n  };\r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({timestampsInSnapshots: true})\r\n\r\n  export default firebase;\r\n\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducer/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\n\nconst store = createStore(rootReducer,\n    compose(applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'user', attachAuthIsReady: true })\n    )\n\n);\n\nstore.firebaseAuthIsReady.then(() => {\n\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: http://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n})\n\n"],"sourceRoot":""}